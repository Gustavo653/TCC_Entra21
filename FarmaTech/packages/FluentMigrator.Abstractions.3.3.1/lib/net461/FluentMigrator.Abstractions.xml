<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluentMigrator.Abstractions</name>
    </assembly>
    <members>
        <member name="T:FluentMigrator.AutoNameContext">
            <summary>
            Sets the context for the automatic name generation
            </summary>
        </member>
        <member name="F:FluentMigrator.AutoNameContext.EmbeddedResource">
            <summary>
            The automatic name generation is for an embedded resource
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax">
            <summary>
            Interface to fluently specify the table schema of the column modification
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the table schema of the column modification
            </summary>
            <param name="schemaName">The table schema name</param>
            <returns>The interface for the column modification</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Column.IAlterColumnAsTypeSyntax">
            <summary>
            The interface for the column modification
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax">
            <summary>
            Interface to specify the table for the column modification
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Column.IAlterColumnOnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the table for the column modification
            </summary>
            <param name="name">The table name</param>
            <returns>Interface for the column modification or the schema specification</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Column.IAlterColumnOptionOrForeignKeyCascadeSyntax">
            <summary>
            Interface to change the column modification options or specifying the
            foreign key constraints
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Column.IAlterColumnOptionSyntax">
            <summary>
            Interface to specify the column modification options
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.IAlterExpressionRoot">
            <summary>
            The root expression interface for the alterations
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.IAlterExpressionRoot.Table(System.String)">
            <summary>
            Alter the table or its columns/options
            </summary>
            <param name="tableName">The table name</param>
            <returns>The interface for the modifications</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.IAlterExpressionRoot.Column(System.String)">
            <summary>
            Alter the column for a given table
            </summary>
            <param name="columnName">The column name</param>
            <returns>The interface to specify the table</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax">
            <summary>
            Interface to change the description or alter the table/column/schema
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaOrDescriptionSyntax.WithDescription(System.String)">
            <summary>
            Set the description
            </summary>
            <param name="description">The description to set</param>
            <returns>Interface providing ways for other modifications</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax">
            <summary>
            Interface to specify the schema or alter a table/column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnOrSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema name
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The interface to alter a table/column</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax">
            <summary>
            Interface to add or alter a column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.AddColumn(System.String)">
            <summary>
            Add a column
            </summary>
            <param name="name">The column name</param>
            <returns>The interface to define the column properties</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.AlterColumn(System.String)">
            <summary>
            Alter a column
            </summary>
            <param name="name">The column name</param>
            <returns>The interface to define the column properties</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableAddColumnOrAlterColumnSyntax.ToSchema(System.String)">
            <summary>
            Set the table schema
            </summary>
            <param name="name">The schema name</param>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableColumnAsTypeSyntax">
            <summary>
            Define the column type
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnOrForeignKeyCascadeSyntax">
            <summary>
            Interface to alter/add a column with an optional foreign key
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax">
            <summary>
            Interface for adding/altering columns or column options
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Alter.Table.IAlterTableColumnOptionOrAddColumnOrAlterColumnSyntax.SetExistingRowsTo(System.Object)">
            <summary>
            The value to set against existing rows for the new column.  Only used for creating columns, not altering them.
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax">
            <summary>
            Set the column type or the table schema
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Set the table schema
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The interface to define the column type</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Column.ICreateColumnAsTypeSyntax">
            <summary>
            Set the column type
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax">
            <summary>
            Interface to specify the table for a column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Column.ICreateColumnOnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the table for the column
            </summary>
            <param name="name">The table name</param>
            <returns>The interface to specify the table schema or column information</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Column.ICreateColumnOptionOrForeignKeyCascadeSyntax">
            <summary>
            The interface to specify the column options or the foreign key
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax">
            <summary>
            Interface to set the column options or the new value for existing rows
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Column.ICreateColumnOptionSyntax.SetExistingRowsTo(System.Object)">
            <summary>
            The value to set against existing rows for the new column.
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax">
            <summary>
            Define the columns of a constraint
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.Column(System.String)">
            <summary>
            The column for the constraint
            </summary>
            <param name="columnName">The column name</param>
            <returns>Other constraint options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Constraint.ICreateConstraintColumnsSyntax.Columns(System.String[])">
            <summary>
            The columns for the constraint
            </summary>
            <param name="columnNames">The column names</param>
            <returns>Other constraint options</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax">
            <summary>
            Specify the primary table for the constraint
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Constraint.ICreateConstraintOnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the primary table for the constraint
            </summary>
            <param name="tableName">The table name</param>
            <returns>Define the schema or columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Constraint.ICreateConstraintOptionsSyntax">
            <summary>
            Options for creating the constraint
            </summary>
            <remarks>
            This is an extension point for DB-specific constraint options
            </remarks>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaOrColumnSyntax">
            <summary>
            Specify the constraint table schema or the columns
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax">
            <summary>
            Specify the constraint schema
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Constraint.ICreateConstraintWithSchemaSyntax.WithSchema(System.String)">
            <summary>
            The constraint schema
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Specify the constraint columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax">
            <summary>
            Defines the cascading rules of a foreign key constraint
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.OnDelete(System.Data.Rule)">
            <summary>
            Defines the DELETE rule
            </summary>
            <param name="rule">The rule to apply to DELETE operations</param>
            <returns>Specify other rules</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.OnUpdate(System.Data.Rule)">
            <summary>
            Defines the UPDATE rule
            </summary>
            <param name="rule">The rule to apply to UPDATE operations</param>
            <returns>Specify other rules</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyCascadeSyntax.OnDeleteOrUpdate(System.Data.Rule)">
            <summary>
            Defines the UPDATE and DELETE rule
            </summary>
            <param name="rule">The rule to apply to UPDATE and DELETE operations</param>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax">
            <summary>
            Interface to define the foreign key columns or the foreign keys table schema
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema of the foreign key table
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Specify the foreign key columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax">
            <summary>
            Interface to define the foreign key columns
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.ForeignColumn(System.String)">
            <summary>
            Define the foreign key column
            </summary>
            <param name="column">The column name</param>
            <returns>Define the foreign keys primary table</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyForeignColumnSyntax.ForeignColumns(System.String[])">
            <summary>
            Define the foreign key columns
            </summary>
            <param name="columns">The column names</param>
            <returns>Define the foreign keys primary table</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax">
            <summary>
            Specify the table to create of foreign key for
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyFromTableSyntax.FromTable(System.String)">
            <summary>
            Specify the table to create of foreign key for
            </summary>
            <param name="table">The table name</param>
            <returns>The schema or foreign key columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax">
            <summary>
            Specify the schema of the foreign keys primary table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema of the foreign keys primary table
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Specify the foreign keys primary table columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax">
            <summary>
            Define the primary table columns for a foreign key
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumn(System.String)">
            <summary>
            Define the primary table column for a foreign key
            </summary>
            <param name="column">The column name</param>
            <returns>Define the cascade rules</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyPrimaryColumnSyntax.PrimaryColumns(System.String[])">
            <summary>
            Define the primary table columns for a foreign key
            </summary>
            <param name="columns">The column names</param>
            <returns>Define the cascade rules</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax">
            <summary>
            Specify the foreign keys primary table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ForeignKey.ICreateForeignKeyToTableSyntax.ToTable(System.String)">
            <summary>
            Specify the foreign keys primary table
            </summary>
            <param name="table">The table name</param>
            <returns>Specify the primary tables columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.ICreateExpressionRoot">
            <summary>
            The root expression for a CREATE operation
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Schema(System.String)">
            <summary>
            Creates a schema
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The options for the schema creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Table(System.String)">
            <summary>
            Creates a table
            </summary>
            <param name="tableName">The table name</param>
            <returns>Additional information about the table creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Column(System.String)">
            <summary>
            Creates a column
            </summary>
            <param name="columnName">The column name</param>
            <returns>Additional information about the column creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.ForeignKey">
            <summary>
            Creates a foreign key with a default name
            </summary>
            <returns>Additional information about the foreign key creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.ForeignKey(System.String)">
            <summary>
            Creates a foreign key with the given name
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <returns>Additional information about the foreign key creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Index">
            <summary>
            Creates an index with a default name
            </summary>
            <returns>Additional information about the index creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Index(System.String)">
            <summary>
            Creates an index with the given name
            </summary>
            <param name="indexName">The index name</param>
            <returns>Additional information about the index creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.Sequence(System.String)">
            <summary>
            Creates a sequence
            </summary>
            <param name="sequenceName">The sequence name</param>
            <returns>Additional information about the sequence creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.PrimaryKey">
            <summary>
            Creates a primary key with a default name
            </summary>
            <returns>Additional information about the primary key creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.PrimaryKey(System.String)">
            <summary>
            Creates a primary key with the given name
            </summary>
            <param name="primaryKeyName">The primary key name</param>
            <returns>Additional information about the primary key creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.UniqueConstraint">
            <summary>
            Creates an unique constraint with a default name
            </summary>
            <returns>Additional information about the unique constraint creation</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.ICreateExpressionRoot.UniqueConstraint(System.String)">
            <summary>
            Creates an unique constraint with the given name
            </summary>
            <param name="constraintName">The unique constraint name</param>
            <returns>Additional information about the unique constraint creation</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax">
            <summary>
            Setting the default index column options
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.Ascending">
            <summary>
            Mark the index column as ascending
            </summary>
            <returns>More column options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.Descending">
            <summary>
            Mark the index column as descending
            </summary>
            <returns>More column options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexColumnOptionsSyntax.Unique">
            <summary>
            Mark the index column as unique
            </summary>
            <returns>More column options for the unique column</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax">
            <summary>
            Extension point for unique column options
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.Create.Index.ICreateIndexColumnUniqueOptionsSyntax.CurrentColumn">
            <summary>
            Access to the current index column definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax">
            <summary>
            Definition of the table the index belongs to
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexForTableSyntax.OnTable(System.String)">
            <summary>
            Defines the table the new index belongs to
            </summary>
            <param name="tableName">The table name</param>
            <returns>Column or schema definition</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax">
            <summary>
            Extension point for additional index column options
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.Create.Index.ICreateIndexMoreColumnOptionsSyntax.CurrentColumn">
            <summary>
            Access to the current index column definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax">
            <summary>
            Definition of the schema the table belongs to
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Defines the schema of the table to create the index for
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Definition of index columns</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax">
            <summary>
            Definition of index columns or options
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.OnColumn(System.String)">
            <summary>
            Defines the index column
            </summary>
            <param name="columnName">The column name</param>
            <returns>Defines the index column options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOnColumnSyntax.WithOptions">
            <summary>
            Set the index options
            </summary>
            <returns>Defines the index options</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax">
            <summary>
            Index options
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.Unique">
            <summary>
            Defines the index as unique
            </summary>
            <returns>Defines the column for the index</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.NonClustered">
            <summary>
            Defines the index as non-clustered
            </summary>
            <returns>Defines the column for the index</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Index.ICreateIndexOptionsSyntax.Clustered">
            <summary>
            Defines the index as clustered
            </summary>
            <returns>Defines the column for the index</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Schema.ICreateSchemaOptionsSyntax">
            <summary>
            Extension point for schema creation options
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax">
            <summary>
            Defines a sequence and (optionally) the schema it's stored in
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceInSchemaSyntax.InSchema(System.String)">
            <summary>
            Defines the schema of the sequence
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Defines the sequence options</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax">
            <summary>
            Define the sequence options
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.IncrementBy(System.Int64)">
            <summary>
            Defines the increment
            </summary>
            <param name="increment">The value used to increment the sequence</param>
            <returns>Define the sequence options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.MinValue(System.Int64)">
            <summary>
            Sets the minimum value of the sequence
            </summary>
            <param name="minValue">The minimum value of the sequence</param>
            <returns>Define the sequence options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.MaxValue(System.Int64)">
            <summary>
            Sets the maximum value of the sequence
            </summary>
            <param name="maxValue">The maximum value of the sequence</param>
            <returns>Define the sequence options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.StartWith(System.Int64)">
            <summary>
            Sets the start value of the sequence
            </summary>
            <param name="startWith">The start value</param>
            <returns>Define the sequence options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.Cache(System.Int64)">
            <summary>
            Cache the next <paramref name="value"/> number of values for a single sequence increment
            </summary>
            <remarks>Normally used together with <see cref="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.IncrementBy(System.Int64)"/></remarks>
            <param name="value">The number of values to cache</param>
            <returns>Define the sequence options</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.Cycle">
            <summary>
            Defines that the sequence starts again with the <see cref="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.MinValue(System.Int64)"/> value for the next value after <see cref="M:FluentMigrator.Builders.Create.Sequence.ICreateSequenceSyntax.MaxValue(System.Int64)"/>
            </summary>
            <returns>Define the sequence options</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableColumnAsTypeSyntax">
            <summary>
            Defines the column type
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrForeignKeyCascadeOrWithColumnSyntax">
            <summary>
            Set column options or create a new column or set a foreign key cascade rule
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableColumnOptionOrWithColumnSyntax">
            <summary>
            Set column options or define a new column
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax">
            <summary>
            Define table schema, a new column or set the tables description
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaOrDescriptionSyntax.WithDescription(System.String)">
            <summary>
            Set the tables description
            </summary>
            <param name="description">The description</param>
            <returns>Define the table schema or a new column</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax">
            <summary>
            Define the table schema or a new column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnOrSchemaSyntax.InSchema(System.String)">
            <summary>
            Define the tables schema
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>Define a new column</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax">
            <summary>
            Define a new column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Create.Table.ICreateTableWithColumnSyntax.WithColumn(System.String)">
            <summary>
            Define a new column
            </summary>
            <param name="name">The column name</param>
            <returns>Define the columns type</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax">
            <summary>
            Delete a column from a table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.FromTable(System.String)">
            <summary>
            Define the table to delete the column from
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Column.IDeleteColumnFromTableSyntax.Column(System.String)">
            <summary>
            Delete define the column to delete
            </summary>
            <param name="columnName">The name of the column to delete</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax">
            <summary>
            Delete a constraint column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.Column(System.String)">
            <summary>
            The name of the column to delete
            </summary>
            <param name="columnName">The column name</param>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintColumnSyntax.Columns(System.String[])">
            <summary>
            The names of the columns to delete
            </summary>
            <param name="columnNames">The column names</param>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax">
            <summary>
            Define the schema of the constraint to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintInSchemaOptionsSyntax.InSchema(System.String)">
            <summary>
            Define the schema of the constraint to delete
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax">
            <summary>
            Delete the constraint from the given table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Constraint.IDeleteConstraintOnTableSyntax.FromTable(System.String)">
            <summary>
            Specify the table to delete the constraint from
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax">
            <summary>
            Delete the default constraint from the given column
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            The table schema of the columns default constraint
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax">
            <summary>
            Specify the column to delete the default constraint from
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnSyntax.OnColumn(System.String)">
            <summary>
            The column to delete the default constraint from
            </summary>
            <param name="columnName">The column name</param>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax">
            <summary>
            Define the table of the column to delete the default constraint from
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the name of the table to delete the columns default constraint from
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax">
            <summary>
            Define the schema or foreign key column to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Define the schema
            </summary>
            <param name="foreignSchemaName">The schema of the foreign key</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax">
            <summary>
            Specify the foreign key columns to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.ForeignColumn(System.String)">
            <summary>
            Specify the column of the foreign key to delete
            </summary>
            <param name="column">The column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyForeignColumnSyntax.ForeignColumns(System.String[])">
            <summary>
            Specify the columns of the foreign key to delete
            </summary>
            <param name="columns">The foreign keys column names</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax">
            <summary>
            Define the table of the foreign key to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyFromTableSyntax.FromTable(System.String)">
            <summary>
            Specify the table of the foreign key
            </summary>
            <param name="foreignTableName">The foreign key table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax">
            <summary>
            Specify the table of the foreign key
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyOnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the table of the foreign key
            </summary>
            <param name="foreignTableName">The foreign keys table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax">
            <summary>
            Specify the columns of the primary table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.PrimaryColumn(System.String)">
            <summary>
            Specify the primary table column
            </summary>
            <param name="column">The column name</param>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnSyntax.PrimaryColumns(System.String[])">
            <summary>
            Specify the primary table columns
            </summary>
            <param name="columns">The column names</param>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax">
            <summary>
            Specify the primary table of the foreign key
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.ForeignKey.IDeleteForeignKeyToTableSyntax.ToTable(System.String)">
            <summary>
            Specify the primary table of the foreign key
            </summary>
            <param name="table">The primary table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax">
            <summary>
            Specify the schema or the condition of the data to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteDataOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema of the table to delete from
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.IDeleteDataSyntax">
            <summary>
            Specify the condition of the data to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteDataSyntax.Row(System.Object)">
            <summary>
            Define the condition of a row/multiple rows to delete
            </summary>
            <param name="dataAsAnonymousType">An anonymous type whose member names will be trated as column names and their values as values for the condition</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteDataSyntax.AllRows">
            <summary>
            Specify that all rows should be deleted
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteDataSyntax.IsNull(System.String)">
            <summary>
            Specify that all rows having a <c>null</c> value in the given column should be deleted
            </summary>
            <param name="columnName">The column name</param>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.IDeleteExpressionRoot">
            <summary>
            The root expression for a DELETE operation
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Schema(System.String)">
            <summary>
            Specify the schema to delete
            </summary>
            <param name="schemaName">The name of the schema</param>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Table(System.String)">
            <summary>
            Specify the table to delete
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Column(System.String)">
            <summary>
            Specify the column to delete
            </summary>
            <param name="columnName">The column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.ForeignKey">
            <summary>
            Specify that a foreign key with a default name should be deleted
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.ForeignKey(System.String)">
            <summary>
            Specify that a foreign key with the given name should be deleted
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.FromTable(System.String)">
            <summary>
            Deletes data from a table
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Index(System.String)">
            <summary>
            Deletes an index
            </summary>
            <param name="indexName">the name of the index</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Index">
            <summary>
            Deletes an index, based on the naming convention in effect
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.Sequence(System.String)">
            <summary>
            Delete a sequence with the given name
            </summary>
            <param name="sequenceName">The sequence name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.PrimaryKey(System.String)">
            <summary>
            Deletes a named Primary Key from a table
            </summary>
            <param name="primaryKeyName">The name of the primary key</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.UniqueConstraint(System.String)">
            <summary>
            Deletes a named Unique Constraint From a table
            </summary>
            <param name="constraintName">The constraint name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.UniqueConstraint">
            <summary>
            Deletes a named Unique Constraint from a table based on the naming convention in effect
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.IDeleteExpressionRoot.DefaultConstraint">
            <summary>
            Deletes a default constraint from a column
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax">
            <summary>
            Specify the options or table of the index to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.OnTable(System.String)">
            <summary>
            Specify the table of the index to delete
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexForTableSyntax.WithOptions">
            <summary>
            Specify the options of the index to delete
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax">
            <summary>
            Specify the column or schema of the index to delete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            The schema of the index to delete
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax">
            <summary>
            Specify the column or columns of the index to dlete
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.OnColumn(System.String)">
            <summary>
            Specify the column of the index to delete
            </summary>
            <param name="columnName">The column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.OnColumns(System.String[])">
            <summary>
            Specify the columns of the index to delete
            </summary>
            <param name="columnNames">The column names</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Delete.Index.IDeleteIndexOnColumnSyntax.WithOptions">
            <summary>
            Specify the options of the index to delete
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Delete.Index.IDeleteIndexOptionsSyntax">
            <summary>
            Extension point for index options
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.Execute.IExecuteExpressionRoot">
            <summary>
            Executes some SQL
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.Sql(System.String)">
            <summary>
            Executes an SQL statement
            </summary>
            <param name="sqlStatement">The SQL statement to execute</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.Sql(System.String,System.String)">
            <summary>
            Executes an SQL statement
            </summary>
            <param name="sqlStatement">The SQL statement to execute</param>
            <param name="description">Description for this SQL statement for logging purposes</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.Script(System.String)">
            <summary>
            Executes an SQL script loaded from the given file
            </summary>
            <param name="pathToSqlScript">The file to read the SQL script from</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.Script(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Executes an SQL script loaded from the given file
            </summary>
            <param name="pathToSqlScript">The file to read the SQL script from</param>
            <param name="parameters">The parameters to be replaced in the SQL script</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.WithConnection(System.Action{System.Data.IDbConnection,System.Data.IDbTransaction})">
            <summary>
            Calls an action to execute dynamically generated SQL statements
            </summary>
            <param name="operation">The operation to execute on a given connection and transaction</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.EmbeddedScript(System.String)">
            <summary>
            Executes an SQL script loaded from an embedded resource
            </summary>
            <param name="embeddedSqlScriptName">The name of the embedded SQL script (partial matches allowed)</param>
        </member>
        <member name="M:FluentMigrator.Builders.Execute.IExecuteExpressionRoot.EmbeddedScript(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Executes an SQL script loaded from an embedded resource
            </summary>
            <param name="embeddedSqlScriptName">The name of the embedded SQL script (partial matches allowed)</param>
            <param name="parameters">The parameters to be replaced in the SQL script</param>
        </member>
        <member name="T:FluentMigrator.Builders.IColumnExpressionBuilder">
            <summary>
            Describes common attributes for expression builders which have a current table/column.
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IColumnExpressionBuilder.SchemaName">
            <summary>
            Gets the schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IColumnExpressionBuilder.TableName">
            <summary>
            Gets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IColumnExpressionBuilder.Column">
            <summary>
            Gets the current column definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Builders.IColumnOptionSyntax`2">
            <summary>
            Specify column options
            </summary>
            <typeparam name="TNext">The interface of the next step</typeparam>
            <typeparam name="TNextFk">The interface of the next step after a foreign key definition</typeparam>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.WithDefault(FluentMigrator.SystemMethods)">
            <summary>
            Sets the default function for the column
            </summary>
            <param name="method">The function providing the default value</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.WithDefaultValue(System.Object)">
            <summary>
            Sets the default value for the column
            </summary>
            <param name="value">The default value</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.WithColumnDescription(System.String)">
            <summary>
            Sets the columns description
            </summary>
            <param name="description">The description</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Identity">
            <summary>
            Sets the columns identity configuration
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Indexed">
            <summary>
            Create an index for this column
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Indexed(System.String)">
            <summary>
            Create an index for this column
            </summary>
            <param name="indexName">The index name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.PrimaryKey">
            <summary>
            Define the column as primary key
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.PrimaryKey(System.String)">
            <summary>
            Define the column as primary key
            </summary>
            <param name="primaryKeyName">The primary key constraint name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Nullable">
            <summary>
            Specify the column as nullable
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.NotNullable">
            <summary>
            Specify the column as not-nullable
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Unique">
            <summary>
            Specify a unique index for the column
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.Unique(System.String)">
            <summary>
            Specify a unique index for the column
            </summary>
            <param name="indexName">The index name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ForeignKey(System.String,System.String)">
            <summary>
            Specifies a foreign key
            </summary>
            <param name="primaryTableName">The primary table name</param>
            <param name="primaryColumnName">The primary tables column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ForeignKey(System.String,System.String,System.String)">
            <summary>
            Specifies a foreign key
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="primaryTableName">The primary table name</param>
            <param name="primaryColumnName">The primary tables column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ForeignKey(System.String,System.String,System.String,System.String)">
            <summary>
            Specifies a foreign key
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="primaryTableSchema">The primary tables schema name</param>
            <param name="primaryTableName">The primary table name</param>
            <param name="primaryColumnName">The primary tables column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ForeignKey">
            <summary>
            Specifies a foreign key
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ReferencedBy(System.String,System.String)">
            <summary>
            Specify a foreign key pointing to the current column
            </summary>
            <param name="foreignTableName">The foreign key table</param>
            <param name="foreignColumnName">The foreign key column</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ReferencedBy(System.String,System.String,System.String)">
            <summary>
            Specify a foreign key pointing to the current column
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="foreignTableName">The foreign key table</param>
            <param name="foreignColumnName">The foreign key column</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnOptionSyntax`2.ReferencedBy(System.String,System.String,System.String,System.String)">
            <summary>
            Specify a foreign key pointing to the current column
            </summary>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="foreignTableSchema">The foreign key table schema</param>
            <param name="foreignTableName">The foreign key table</param>
            <param name="foreignColumnName">The foreign key column</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.IColumnTypeSyntax`1">
            <summary>
            Defines the column type
            </summary>
            <typeparam name="TNext">The interface to return after a type was specified</typeparam>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsAnsiString">
            <summary>
            Defines the column type as ANSI string (single byte character set)
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsAnsiString(System.String)">
            <summary>
            Defines the column type as ANSI string (single byte character set) with the given <paramref name="collationName"/>
            </summary>
            <param name="collationName">The collation to use for this column</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsAnsiString(System.Int32)">
            <summary>
            Defines the column type as ANSI string (single byte character set) with the given <paramref name="size"/>
            </summary>
            <param name="size">The maximum size (usually in bytes) of the ansi string</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsAnsiString(System.Int32,System.String)">
            <summary>
            Defines the column type as ANSI string (single byte character set) with the given <paramref name="size"/> and <paramref name="collationName"/>
            </summary>
            <param name="size">The maximum size (usually in bytes) of the ansi string</param>
            <param name="collationName">The collation to use for this column</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsBinary">
            <summary>
            Defines the column type as BLOB
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsBinary(System.Int32)">
            <summary>
            Defines the column type as BLOB
            </summary>
            <param name="size">The maximum size of the BLOB (in bytes)</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsBoolean">
            <summary>
            Defines the column type as <see cref="T:System.Boolean"/> (or bit)
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsByte">
            <summary>
            Defines the column type as <see cref="T:System.Byte"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsCurrency">
            <summary>
            Defines the column type as currency
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDate">
            <summary>
            Defines the column type as date
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDateTime">
            <summary>
            Defines the column type as <see cref="T:System.DateTime"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDateTime2">
            <summary>
            Defines the column type as <see cref="T:System.DateTime"/> with extended range and precision
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDateTimeOffset">
            <summary>
            Defines the column type as <see cref="T:System.DateTimeOffset"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDateTimeOffset(System.Int32)">
            <summary>
            Defines the column type as <see cref="T:System.DateTimeOffset"/>
            </summary>
            <param name="precision">The number of digits for the fraction of a second</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDecimal">
            <summary>
            Defines the column type as <see cref="T:System.Decimal"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDecimal(System.Int32,System.Int32)">
            <summary>
            Defines the column type as decimal with given size and precision
            </summary>
            <param name="size">The number of digits</param>
            <param name="precision">The number of digits after the comma</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsDouble">
            <summary>
            Defines the column type as <see cref="T:System.Double"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsGuid">
            <summary>
            Defines the column type as a <see cref="T:System.Guid"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsFixedLengthString(System.Int32)">
            <summary>
            Defines the column type as unicode string with a fixed length
            </summary>
            <param name="size">The maximum length of the string in code points</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsFixedLengthString(System.Int32,System.String)">
            <summary>
            Defines the column type as unicode string with a fixed length
            </summary>
            <param name="size">The length of the string in code points</param>
            <param name="collationName">The name of the collation to use</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsFixedLengthAnsiString(System.Int32)">
            <summary>
            Defines the column type as ANSI string with fixed length
            </summary>
            <param name="size">The length of the string in bytes</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsFixedLengthAnsiString(System.Int32,System.String)">
            <summary>
            Defines the column type as ANSI string with fixed length
            </summary>
            <param name="size">The length of the string in bytes</param>
            <param name="collationName">The name of the collation to use</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsFloat">
            <summary>
            Defines the column type as a <see cref="T:System.Single"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsInt16">
            <summary>
            Defines the column type as a <see cref="T:System.Int16"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsInt32">
            <summary>
            Defines the column type as a <see cref="T:System.Int32"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsInt64">
            <summary>
            Defines the column type as a <see cref="T:System.Int64"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsString">
            <summary>
            Defines the column type as unicode string
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsString(System.String)">
            <summary>
            Defines the column type as unicode string
            </summary>
            <param name="collationName">The name of the collation</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsString(System.Int32)">
            <summary>
            Defines the column type as unicode string
            </summary>
            <param name="size">The maximum length in code points</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsString(System.Int32,System.String)">
            <summary>
            Defines the column type as unicode string
            </summary>
            <param name="size">The maximum length in code points</param>
            <param name="collationName">The name of the collation</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsTime">
            <summary>
            Defines the column type as <see cref="T:System.TimeSpan"/>
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsXml">
            <summary>
            Defines the column type as XML
            </summary>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsXml(System.Int32)">
            <summary>
            Defines the column type as XML
            </summary>
            <param name="size">The maximum size</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IColumnTypeSyntax`1.AsCustom(System.String)">
            <summary>
            Defines the column with a custom (DB-specific) type
            </summary>
            <param name="customType">The custom type as SQL identifier</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot">
            <summary>
            Defines fluent expressions that can be conditionally executed
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Alter">
            <summary>
            Creates an ALTER expression
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Create">
            <summary>
            Creates CREATE expression
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Delete">
            <summary>
            Creates a DELETE expression
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Rename">
            <summary>
            Renames a database object
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Insert">
            <summary>
            Inserts data into a table
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Execute">
            <summary>
            Execute some SQL
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Schema">
            <summary>
            Check if a database object exists
            </summary>
        </member>
        <member name="P:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Update">
            <summary>
            Updates data in a table
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.IfDatabase.IIfDatabaseExpressionRoot.Delegate(System.Action)">
            <summary>
            Invokes a delegate that can be used to create database specific expressions
            </summary>
            <param name="delegation">The delegate to call if the database type matches</param>
        </member>
        <member name="T:FluentMigrator.Builders.IForeignKeyCascadeSyntax`2">
            <summary>
            Base interface for specifying the foreign key cascading
            </summary>
            <typeparam name="TNext">The interface for the next step after specifying the cascade rules for both DELETE and UPDATE</typeparam>
            <typeparam name="TNextFk">The interface for the next step after specifying the cascade rule for either DELETE or UPDATE</typeparam>
        </member>
        <member name="M:FluentMigrator.Builders.IForeignKeyCascadeSyntax`2.OnDelete(System.Data.Rule)">
            <summary>
            Specify the behavior for DELETEs
            </summary>
            <param name="rule">The rule to apply for DELETEs</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IForeignKeyCascadeSyntax`2.OnUpdate(System.Data.Rule)">
            <summary>
            Specify the behavior for UPDATEs
            </summary>
            <param name="rule">The rule to apply for UPDATEs</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.IForeignKeyCascadeSyntax`2.OnDeleteOrUpdate(System.Data.Rule)">
            <summary>
            Specify the behavior for UPDATEs and DELETEs
            </summary>
            <param name="rule">The rule to apply for UPDATEs and DELETEs</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.IInSchemaSyntax">
            <summary>
            Defines the schema
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.IInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specifies the schema
            </summary>
            <param name="schemaName">The schema name</param>
        </member>
        <member name="T:FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax">
            <summary>
            Specify the data or schema to insert
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Insert.IInsertDataOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema of the table to insert data
            </summary>
            <param name="schemaName">The schema</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Insert.IInsertDataSyntax">
            <summary>
            Specify the data to insert
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Insert.IInsertDataSyntax.Row(System.Object)">
            <summary>
            Specify the data to insert
            </summary>
            <param name="dataAsAnonymousType">An anonymous object that is used to insert data</param>
            <remarks>
            The properties are the column names and their values are the row values.
            </remarks>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Insert.IInsertDataSyntax.Row(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Specify the data to insert
            </summary>
            <param name="data">The dictionary containing column name/value combinations</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Insert.IInsertExpressionRoot">
            <summary>
            The root of the INSERT expression
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Insert.IInsertExpressionRoot.IntoTable(System.String)">
            <summary>
            Specify the table name to insert data to
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax">
            <summary>
            Specify the schema of the table whose column is to be renamed
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.Column.IRenameColumnToOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema name
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax">
            <summary>
            Specify the target column name
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.Column.IRenameColumnToSyntax.To(System.String)">
            <summary>
            Specify the new column name
            </summary>
            <param name="name">The new column name</param>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.IRenameColumnTableSyntax">
            <summary>
            Specify the table (or its column) to be renamed
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.IRenameColumnTableSyntax.OnTable(System.String)">
            <summary>
            Specify the name of the table (or its column) to be renamed
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.IRenameExpressionRoot">
            <summary>
            The expression root for renaming tables or columns
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.IRenameExpressionRoot.Table(System.String)">
            <summary>
            Specify the table (or its column) to be renamed
            </summary>
            <param name="oldName">The current table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.IRenameExpressionRoot.Column(System.String)">
            <summary>
            Specify the column to be renamed
            </summary>
            <param name="oldName">The current column name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax">
            <summary>
            Specify the new table name or schema of the table to rename
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.Table.IRenameTableToOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the tables schema name
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax">
            <summary>
            Specify the new table name
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Rename.Table.IRenameTableToSyntax.To(System.String)">
            <summary>
            Specify the new name of the table
            </summary>
            <param name="name">The new table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax">
            <summary>
            Query a columns existence
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Column.ISchemaColumnSyntax.Exists">
            <summary>
            Returns <c>true</c> when the column exists
            </summary>
            <returns><c>true</c> when the column exists</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax">
            <summary>
            Query a constraints existence
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Constraint.ISchemaConstraintSyntax.Exists">
            <summary>
            Returns <c>true</c> when a constraint exists
            </summary>
            <returns><c>true</c> when a constraint exists</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax">
            <summary>
            Query an index' existence
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Index.ISchemaIndexSyntax.Exists">
            <summary>
            Returns <c>true</c> when the index exists
            </summary>
            <returns><c>true</c> when the index exists</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.ISchemaExpressionRoot">
            <summary>
            The expression root to query the existence of database objects
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.ISchemaExpressionRoot.Table(System.String)">
            <summary>
            Specify the table as base to query a database objects existence
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.ISchemaExpressionRoot.Schema(System.String)">
            <summary>
            Specify the schema as base to query a database objects existence
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax">
            <summary>
            Query a schemas (or its of its tables) existence
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.Exists">
            <summary>
            Returns <c>true</c> when a schema exists
            </summary>
            <returns><c>true</c> when a schema exists</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Schema.ISchemaSchemaSyntax.Table(System.String)">
            <summary>
            Specify the table name as basis for a query a database objects existence
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax">
            <summary>
            Queries a tables (or one of its childs) existence
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.Exists">
            <summary>
            Returns <c>true</c> when the table exists
            </summary>
            <returns><c>true</c> when the table exists</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.Column(System.String)">
            <summary>
            Specifies the column to check
            </summary>
            <param name="columnName">The column name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.Index(System.String)">
            <summary>
            Specify the index to check
            </summary>
            <param name="indexName">The index name</param>
            <returns>The next step</returns>
        </member>
        <member name="M:FluentMigrator.Builders.Schema.Table.ISchemaTableSyntax.Constraint(System.String)">
            <summary>
            Specify the constraint to check
            </summary>
            <param name="constraintName">The constraint name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Update.IUpdateExpressionRoot">
            <summary>
            The expression root to update rows
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Update.IUpdateExpressionRoot.Table(System.String)">
            <summary>
            Specifies the table to update its data
            </summary>
            <param name="tableName">The table name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax">
            <summary>
            Specify the schema or the data to update
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Update.IUpdateSetOrInSchemaSyntax.InSchema(System.String)">
            <summary>
            Specify the schema of the table to update its data
            </summary>
            <param name="schemaName">The schema name</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Update.IUpdateSetSyntax">
            <summary>
            Specify the data to update
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Update.IUpdateSetSyntax.Set(System.Object)">
            <summary>
            Specify the values to be set
            </summary>
            <param name="dataAsAnonymousType">The columns and values to be used set</param>
            <returns>The next step</returns>
        </member>
        <member name="T:FluentMigrator.Builders.Update.IUpdateWhereSyntax">
            <summary>
            Interface the specify the update condition
            </summary>
        </member>
        <member name="M:FluentMigrator.Builders.Update.IUpdateWhereSyntax.Where(System.Object)">
            <summary>
            Specify the condition of the rows to update
            </summary>
            <param name="dataAsAnonymousType">The columns and values to be used as condition</param>
        </member>
        <member name="M:FluentMigrator.Builders.Update.IUpdateWhereSyntax.AllRows">
            <summary>
            Specify that all rows should be updated
            </summary>
        </member>
        <member name="T:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException">
            <summary>
            Exception to be thrown when a database operation is not supported
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException"/> class.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException"/> class.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DatabaseOperationNotSupportedException"/> class.
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:FluentMigrator.Exceptions.DuplicateMigrationException">
            <summary>
            An exception that is thrown when more than one migration with the same version was found
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.DuplicateMigrationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DuplicateMigrationException"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.DuplicateMigrationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DuplicateMigrationException"/> class.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.DuplicateMigrationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DuplicateMigrationException"/> class.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.DuplicateMigrationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.DuplicateMigrationException"/> class.
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:FluentMigrator.Exceptions.FluentMigratorException">
            <summary>
            The base exception class for FluentMigrator exceptions
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.FluentMigratorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.FluentMigratorException"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.FluentMigratorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.FluentMigratorException"/> class.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.FluentMigratorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.FluentMigratorException"/> class.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.FluentMigratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.FluentMigratorException"/> class.
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException">
            <summary>
            Exception that gets thrown when a processor factory couldn't be found
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException"/> class.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException"/> class.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.ProcessorFactoryNotFoundException"/> class.
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:FluentMigrator.Exceptions.UndeterminableConnectionException">
            <summary>
            Exception that gets thrown when no connection string could be found
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.UndeterminableConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.UndeterminableConnectionException"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Exceptions.UndeterminableConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.UndeterminableConnectionException"/> class.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.UndeterminableConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.UndeterminableConnectionException"/> class.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:FluentMigrator.Exceptions.UndeterminableConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Exceptions.UndeterminableConnectionException"/> class.
            </summary>
            <param name="info">The serialization information</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:FluentMigrator.ExplicitUnicodeString">
            <summary>
            Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N
            </summary>
        </member>
        <member name="P:FluentMigrator.ExplicitUnicodeString.Text">
            <summary>
            Gets the text of the unicode string literal
            </summary>
        </member>
        <member name="M:FluentMigrator.ExplicitUnicodeString.#ctor(System.String)">
            <summary>
            Insert text with unicode data. Primarily for Sql Server, it prefixes the string with 'N
            </summary>
            <param name="text">Unicode string</param>
        </member>
        <member name="M:FluentMigrator.ExplicitUnicodeString.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.AlterColumnExpression">
            <summary>
            The implementation of interfaces to alter a column
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterColumnExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.AlterColumnExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterColumnExpression.Column">
            <summary>
            Gets or sets the column definition
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.AlterColumnExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.AlterColumnExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.AlterColumnExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.AlterDefaultConstraintExpression">
            <summary>
            Expression to alter default constraints
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterDefaultConstraintExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.AlterDefaultConstraintExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterDefaultConstraintExpression.ColumnName">
            <summary>
            Gets or sets the column name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterDefaultConstraintExpression.DefaultValue">
            <summary>
            Gets or sets the default value
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.AlterDefaultConstraintExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.AlterDefaultConstraintExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.AlterSchemaExpression">
            <summary>
            Expression to move a table from one schema to another
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterSchemaExpression.SourceSchemaName">
            <summary>
            Gets or sets the source schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterSchemaExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterSchemaExpression.DestinationSchemaName">
            <summary>
            Gets or sets the destination schema name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.AlterSchemaExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.AlterSchemaExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.AlterTableExpression">
            <summary>
            Expression to alter the table description
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterTableExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.AlterTableExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.AlterTableExpression.TableDescription">
            <summary>
            Gets or sets the table description
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.AlterTableExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.AlterTableExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateColumnExpression">
            <summary>
            Expression to create a table
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateColumnExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateColumnExpression.TableName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateColumnExpression.Column">
            <summary>
            Gets or sets the current column definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateColumnExpression.FluentMigrator#Expressions#IColumnsExpression#Columns">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateColumnExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateColumnExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateColumnExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateColumnExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateConstraintExpression">
            <summary>
            The expression to create a constraint
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateConstraintExpression.Constraint">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateConstraintExpression.#ctor(FluentMigrator.Model.ConstraintType)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Expressions.CreateConstraintExpression"/> class.
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateConstraintExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateConstraintExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateConstraintExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateConstraintExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateConstraintExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateForeignKeyExpression">
            <summary>
            Expression to create a foreign key
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateForeignKeyExpression.ForeignKey">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateForeignKeyExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateForeignKeyExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateForeignKeyExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateForeignKeyExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateIndexExpression">
            <summary>
            Expression to create an index
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateIndexExpression.Index">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateIndexExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateIndexExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateIndexExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateIndexExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateIndexExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateSchemaExpression">
            <summary>
            Expression to create a schema
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateSchemaExpression.SchemaName">
            <summary>
            Gets or sets the schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateSchemaExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateSchemaExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateSchemaExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateSchemaExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateSequenceExpression">
            <summary>
            Expression to crate a sequence
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateSequenceExpression.Sequence">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateSequenceExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateSequenceExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateSequenceExpression.Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.CreateTableExpression">
            <summary>
            Expression to create a table
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.TableName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.Columns">
            <summary>
            Gets or sets the column definitions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.TableDescription">
            <summary>
            Gets or sets the table description
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.FluentMigrator#Expressions#IColumnsExpression#Columns">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateTableExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateTableExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.CreateTableExpression.ToString">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.CreateTableExpression.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteColumnExpression">
            <summary>
            Expression to delete a column
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteColumnExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteColumnExpression.TableName">
            <summary>
            Gets or sets a table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteColumnExpression.ColumnNames">
            <summary>
            Gets or sets the column names
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteColumnExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteColumnExpression.ToString">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteColumnExpression.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteConstraintExpression">
            <summary>
            Expression to delete a constraint
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteConstraintExpression.#ctor(FluentMigrator.Model.ConstraintType)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Expressions.DeleteConstraintExpression"/> class.
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteConstraintExpression.Constraint">
            <summary>
            Gets or sets the constraint definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteConstraintExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteConstraintExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteConstraintExpression.ToString">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteConstraintExpression.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteDataExpression">
            <summary>
            Expression to delete the data
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDataExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDataExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDataExpression.IsAllRows">
            <summary>
            Gets or sets a value indicating whether all rows should be deleted
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDataExpression.Rows">
            <summary>
            Gets the list of row definitions
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteDataExpression.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteDataExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteDataExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteDefaultConstraintExpression">
            <summary>
            Expression to delete constraints
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDefaultConstraintExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDefaultConstraintExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteDefaultConstraintExpression.ColumnName">
            <summary>
            Gets or sets the column name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteDefaultConstraintExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteDefaultConstraintExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteForeignKeyExpression">
            <summary>
            Expression to delete a foreign key
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteForeignKeyExpression.ForeignKey">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteForeignKeyExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteForeignKeyExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteForeignKeyExpression.ToString">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteForeignKeyExpression.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteIndexExpression">
            <summary>
            Expression to delete an index
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteIndexExpression.Index">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteIndexExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteIndexExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteIndexExpression.ToString">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteIndexExpression.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteSchemaExpression">
            <summary>
            Expression to delete a schema
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteSchemaExpression.SchemaName">
            <summary>
            Gets or sets a schema name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteSchemaExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteSchemaExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteSequenceExpression">
            <summary>
            Expression to delete a sequence
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteSequenceExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteSequenceExpression.SequenceName">
            <summary>
            Gets or sets the sequence name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteSequenceExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteSequenceExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.DeleteTableExpression">
            <summary>
            Expression to delete a table
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteTableExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.DeleteTableExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteTableExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.DeleteTableExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression">
            <summary>
            Expression to execute an embedded SQL script
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression"/> class.
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.#ctor(System.Collections.Generic.IEnumerable{FluentMigrator.Infrastructure.IEmbeddedResourceProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression"/> class.
            </summary>
            <param name="embeddedResourceProviders">The embedded resource providers</param>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.#ctor(FluentMigrator.Infrastructure.IAssemblyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression"/> class.
            </summary>
            <param name="assemblyCollection">The collection of assemblies to be searched for the resources</param>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.SqlScript">
            <summary>
            Gets or sets the SQL script name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.MigrationAssemblies">
            <summary>
            Gets or sets the migration assemblies
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase">
            <summary>
            Base class that handles execution of scripts stored as embedded resource
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.GetQualifiedResourcePath(System.Collections.Generic.IReadOnlyCollection{System.ValueTuple{System.String,System.Reflection.Assembly}},System.String[])">
            <summary>
            Gets the fully qualified resource name and assembly
            </summary>
            <param name="resourceNames">The resource names where the <paramref name="sqlScriptNames"/> should be found</param>
            <param name="sqlScriptNames">The names of the SQL script resources to be found</param>
            <returns>the fully qualified resource name and assembly</returns>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteEmbeddedSqlScriptExpressionBase.FindResourceName(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Reflection.Assembly}},System.String)">
            <summary>
            Finds resources with the given name
            </summary>
            <param name="resourceNames">The resource names where the <paramref name="sqlScriptName"/> should be found</param>
            <param name="sqlScriptName">The name of the SQL script resource to be found</param>
            <returns>The found resources</returns>
        </member>
        <member name="T:FluentMigrator.Expressions.ExecuteSqlScriptExpression">
            <summary>
            Expression to execute SQL scripts
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteSqlScriptExpression.SqlScript">
            <summary>
            Gets or sets the SQL script to be executed
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteSqlScriptExpression.RootPath">
            <summary>
            Gets or sets the root path where the SQL script file should be loaded from
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteSqlScriptExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteSqlScriptExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase">
            <summary>
            The base class for SQL script execution
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.Parameters">
            <summary>
            Gets or sets parameters to be replaced before script execution
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteSqlScriptExpressionBase.Execute(FluentMigrator.IMigrationProcessor,System.String)">
            <summary>
            Executes the <paramref name="sqlScript"/> with the given <paramref name="processor"/>
            </summary>
            <param name="processor">The processor to execute the script with</param>
            <param name="sqlScript">The SQL script to execute</param>
        </member>
        <member name="T:FluentMigrator.Expressions.ExecuteSqlStatementExpression">
            <summary>
            Expression to execute an SQL statement
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteSqlStatementExpression.SqlStatement">
            <summary>
            Gets or sets the SQL statement to be executed
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ExecuteSqlStatementExpression.Description">
            <summary>
            Gets or sets the description for this SQL statement
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteSqlStatementExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.ExecuteSqlStatementExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.IAutoNameExpression">
            <summary>
            The expression requires an automatically generated name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IAutoNameExpression.AutoNames">
            <summary>
            Gets or sets the automatically generated names
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IAutoNameExpression.AutoNameContext">
            <summary>
            Gets or sets the context in which the automatically generated name gets used
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IAutoNameExpression.MigrationType">
            <summary>
            Gets the type of the migration object
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IAutoNameExpression.DatabaseNames">
            <summary>
            Gets the database names
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IAutoNameExpression.Direction">
            <summary>
            Gets the direction of the migration
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IColumnsExpression">
            <summary>
            Opt-in into columns conventions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IColumnsExpression.TableName">
            <summary>
            Gets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IColumnsExpression.Columns">
            <summary>
            Gets the list of columns
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IConstraintExpression">
            <summary>
            Opt-in into constraint expression conventions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IConstraintExpression.Constraint">
            <summary>
            Gets the constraint definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IFileSystemExpression">
            <summary>
            Opt-in into the file system convention
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IFileSystemExpression.RootPath">
            <summary>
            Gets or sets the root path (working directory)
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IForeignKeyExpression">
            <summary>
            Opt-in into the foreign key expressions conventions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IForeignKeyExpression.ForeignKey">
            <summary>
            Gets the foreign key definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IIndexExpression">
            <summary>
            Opt-in into the index expression conventions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.IIndexExpression.Index">
            <summary>
            Gets the index definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.IMigrationExpression">
            <summary>
            The interface for a migration expression
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.IMigrationExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <summary>
            Execute the expression with the given <paramref name="processor"/>
            </summary>
            <param name="processor">The processor to execute the expression with</param>
        </member>
        <member name="M:FluentMigrator.Expressions.IMigrationExpression.Reverse">
            <summary>
            Create a reversing migration expression
            </summary>
            <returns>The reversing migration expression</returns>
        </member>
        <member name="T:FluentMigrator.Expressions.InsertDataExpression">
            <summary>
            Expression to insert data
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.InsertDataExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.InsertDataExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.InsertDataExpression.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.InsertDataExpression.Rows">
            <summary>
            Gets the rows to be inserted
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.InsertDataExpression.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.InsertDataExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.InsertDataExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.ISchemaExpression">
            <summary>
            Opt-in into the schema expression convention
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ISchemaExpression.SchemaName">
            <summary>
            Gets or sets the schema name
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.ISequenceExpression">
            <summary>
            Opt-in into the sequence expression conventions
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.ISequenceExpression.Sequence">
            <summary>
            Gets the sequence definition
            </summary>
        </member>
        <member name="T:FluentMigrator.Expressions.MigrationExpressionBase">
            <summary>
            The base class for migration expressions
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.MigrationExpressionBase.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.MigrationExpressionBase.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.MigrationExpressionBase.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.MigrationExpressionBase.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.PerformDBOperationExpression">
            <summary>
            Expression that allows the execution of DB operations
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.PerformDBOperationExpression.Operation">
            <summary>
            Gets or sets the operation to be executed for a given database connection
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.PerformDBOperationExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.RenameColumnExpression">
            <summary>
            Expression to rename a column
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.RenameColumnExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.RenameColumnExpression.TableName">
            <summary>
            Gets or sets the name of the table
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.RenameColumnExpression.OldName">
            <summary>
            Gets or sets the old column name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.RenameColumnExpression.NewName">
            <summary>
            Gets or sets the new column name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.RenameColumnExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.RenameColumnExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.RenameColumnExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.RenameTableExpression">
            <summary>
            Expression to rename a table
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.RenameTableExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.RenameTableExpression.OldName">
            <summary>
            Gets or sets the old table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.RenameTableExpression.NewName">
            <summary>
            Gets or sets the new table name
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.RenameTableExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.RenameTableExpression.Reverse">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.RenameTableExpression.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Expressions.UpdateDataExpression">
            <summary>
            Expression to update data
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.UpdateDataExpression.SchemaName">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Expressions.UpdateDataExpression.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.UpdateDataExpression.Set">
            <summary>
            Gets or sets the values to be set
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.UpdateDataExpression.Where">
            <summary>
            Gets or sets the condition column/value pairs
            </summary>
        </member>
        <member name="P:FluentMigrator.Expressions.UpdateDataExpression.IsAllRows">
            <summary>
            Gets or sets a value indicating whether all rows should be updated
            </summary>
        </member>
        <member name="M:FluentMigrator.Expressions.UpdateDataExpression.ExecuteWith(FluentMigrator.IMigrationProcessor)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Expressions.UpdateDataExpression.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.IMigration">
            <summary>
            The base interface for all migrations
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigration.ApplicationContext">
            <summary>
            Gets the arbitrary application context passed to the task runner
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigration.ConnectionString">
            <summary>
            Gets the connection string passed to the task runner
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigration.GetUpExpressions(FluentMigrator.Infrastructure.IMigrationContext)">
            <summary>
            Collects all Up migration expressions in the <paramref name="context"/>.
            </summary>
            <param name="context">The context to use while collecting the Up migration expressions</param>
        </member>
        <member name="M:FluentMigrator.IMigration.GetDownExpressions(FluentMigrator.Infrastructure.IMigrationContext)">
            <summary>
            Collects all Down migration expressions in the <paramref name="context"/>.
            </summary>
            <param name="context">The context to use while collecting the Down migration expressions</param>
        </member>
        <member name="T:FluentMigrator.IMigrationGenerator">
            <summary>
            Base interface for a migration SQL generator
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateSchemaExpression)">
            <summary>
            Generates a <c>CREATE SCHEMA</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteSchemaExpression)">
            <summary>
            Generates a <c>DROP SCHEMA</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateTableExpression)">
            <summary>
            Generates a <c>CREATE TABLE</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.AlterTableExpression)">
            <summary>
            Generates a <c>ALTER TABLE</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.AlterColumnExpression)">
            <summary>
            Generates a <c>ALTER TABLE ALTER COLUMN</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateColumnExpression)">
            <summary>
            Generates a <c>ALTER TABLE ADD COLUMN</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteTableExpression)">
            <summary>
            Generates a <c>DROP TABLE</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteColumnExpression)">
            <summary>
            Generates a <c>ALTER TABLE DROP COLUMN</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateForeignKeyExpression)">
            <summary>
            Generates an SQL statement to create a foreign key
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteForeignKeyExpression)">
            <summary>
            Generates an SQL statement to delete a foreign key
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateIndexExpression)">
            <summary>
            Generates an SQL statement to create an index
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteIndexExpression)">
            <summary>
            Generates an SQL statement to drop an index
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.RenameTableExpression)">
            <summary>
            Generates an SQL statement to rename a table
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.RenameColumnExpression)">
            <summary>
            Generates an SQL statement to rename a column
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.InsertDataExpression)">
            <summary>
            Generates an SQL statement to INSERT data
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.AlterDefaultConstraintExpression)">
            <summary>
            Generates an SQL statement to alter a DEFAULT constraint
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteDataExpression)">
            <summary>
            Generates an SQL statement to DELETE data
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.UpdateDataExpression)">
            <summary>
            Generates an SQL statement to UPDATE data
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.AlterSchemaExpression)">
            <summary>
            Generates an SQL statement to move a table from one schema to another
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateSequenceExpression)">
            <summary>
            Generates a <c>CREATE SEQUENCE</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteSequenceExpression)">
            <summary>
            Generates a <c>DROP SEQUENCE</c> SQL statement
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.CreateConstraintExpression)">
            <summary>
            Generates an SQL statement to create a constraint
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteConstraintExpression)">
            <summary>
            Generates an SQL statement to drop a constraint
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationGenerator.Generate(FluentMigrator.Expressions.DeleteDefaultConstraintExpression)">
            <summary>
            Generates an SQL statement to drop a default constraint
            </summary>
            <param name="expression">The expression to create the SQL for</param>
            <returns>The generated SQL</returns>
        </member>
        <member name="T:FluentMigrator.IMigrationProcessor">
            <summary>
            Interface for a migration processor
            </summary>
            <remarks>
            A migration processor generates the SQL statements using a <see cref="T:FluentMigrator.IMigrationGenerator"/>
            and executes it using the given connection string.
            </remarks>
        </member>
        <member name="P:FluentMigrator.IMigrationProcessor.Options">
            <summary>
            Gets the migration processor options
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigrationProcessor.ConnectionString">
            <summary>
            Gets the connection string
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Execute(System.String)">
            <summary>
            Execute an SQL statement (escaping not needed)
            </summary>
            <param name="sql">The SQL statement</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Execute(System.String,System.Object[])">
            <summary>
            Execute an SQL statement
            </summary>
            <param name="template">The SQL statement</param>
            <param name="args">The arguments to replace in the SQL statement</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.ReadTableData(System.String,System.String)">
            <summary>
            Reads all data from all rows from a table
            </summary>
            <param name="schemaName">The schema name of the table</param>
            <param name="tableName">The table name</param>
            <returns>The data from the specified table</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Read(System.String,System.Object[])">
            <summary>
            Executes and returns the result of an SQL query
            </summary>
            <param name="template">The SQL query</param>
            <param name="args">The arguments of the SQL query</param>
            <returns>The data from the specified SQL query</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Exists(System.String,System.Object[])">
            <summary>
            Returns <c>true</c> if data could be found for the given SQL query
            </summary>
            <param name="template">The SQL query</param>
            <param name="args">The arguments of the SQL query</param>
            <returns><c>true</c> when the SQL query returned data</returns>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.BeginTransaction">
            <summary>
            Begins a transaction
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.CommitTransaction">
            <summary>
            Commits a transaction
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.RollbackTransaction">
            <summary>
            Rollback of a transaction
            </summary>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateSchemaExpression)">
            <summary>
            Executes a <c>CREATE SCHEMA</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteSchemaExpression)">
            <summary>
            Executes a <c>DROP SCHEMA</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.AlterTableExpression)">
            <summary>
            Executes a <c>ALTER TABLE</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.AlterColumnExpression)">
            <summary>
            Executes a <c>ALTER TABLE ALTER COLUMN</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateTableExpression)">
            <summary>
            Executes a <c>CREATE TABLE</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateColumnExpression)">
            <summary>
            Executes a <c>ALTER TABLE ADD COLUMN</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteTableExpression)">
            <summary>
            Executes a <c>DROP TABLE</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteColumnExpression)">
            <summary>
            Executes a <c>ALTER TABLE DROP COLUMN</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateForeignKeyExpression)">
            <summary>
            Executes an SQL expression to create a foreign key
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteForeignKeyExpression)">
            <summary>
            Executes an SQL expression to drop a foreign key
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateIndexExpression)">
            <summary>
            Executes an SQL expression to create an index
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteIndexExpression)">
            <summary>
            Executes an SQL expression to drop an index
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.RenameTableExpression)">
            <summary>
            Executes an SQL expression to rename a table
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.RenameColumnExpression)">
            <summary>
            Executes an SQL expression to rename a column
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.InsertDataExpression)">
            <summary>
            Executes an SQL expression to INSERT data
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.AlterDefaultConstraintExpression)">
            <summary>
            Executes an SQL expression to alter a default constraint
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.PerformDBOperationExpression)">
            <summary>
            Executes a DB operation
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteDataExpression)">
            <summary>
            Executes an SQL expression to DELETE data
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.UpdateDataExpression)">
            <summary>
            Executes an SQL expression to UPDATE data
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.AlterSchemaExpression)">
            <summary>
            Executes a <c>ALTER SCHEMA</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateSequenceExpression)">
            <summary>
            Executes a <c>CREATE SEQUENCE</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteSequenceExpression)">
            <summary>
            Executes a <c>DROP SEQUENCE</c> SQL expression
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.CreateConstraintExpression)">
            <summary>
            Executes an SQL expression to create a constraint
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteConstraintExpression)">
            <summary>
            Executes an SQL expression to drop a constraint
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="M:FluentMigrator.IMigrationProcessor.Process(FluentMigrator.Expressions.DeleteDefaultConstraintExpression)">
            <summary>
            Executes an SQL expression to drop a default constraint
            </summary>
            <param name="expression">The expression to execute</param>
        </member>
        <member name="T:FluentMigrator.IMigrationProcessorOptions">
            <summary>
            Options for the <see cref="T:FluentMigrator.IMigrationProcessor"/>
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigrationProcessorOptions.PreviewOnly">
            <summary>
            Gets a value indicating whether a preview-only mode is active
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigrationProcessorOptions.Timeout">
            <summary>
            Gets the global timeout
            </summary>
        </member>
        <member name="P:FluentMigrator.IMigrationProcessorOptions.ProviderSwitches">
            <summary>
            Gets the provider switches
            </summary>
        </member>
        <member name="T:FluentMigrator.Infrastructure.AssemblyCollection">
            <summary>
            An assembly collection for multiple assemblies
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.AssemblyCollection.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.AssemblyCollection"/> class.
            </summary>
            <param name="assemblies">The assemblies for the collection</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.AssemblyCollection.GetExportedTypes">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.AssemblyCollection.Assemblies">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.AssemblyCollection.GetManifestResourceNames">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider">
            <summary>
            The default implementation of the <see cref="T:FluentMigrator.Infrastructure.IEmbeddedResourceProvider"/> interface
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider"/> class.
            </summary>
            <param name="assemblies">The assemblies to be scanned for the embedded resources</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.#ctor(System.Reflection.Assembly[])">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider"/> class.
            </summary>
            <param name="assemblies">The assemblies to be scanned for the embedded resources</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.#ctor(FluentMigrator.Infrastructure.IAssemblyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider"/> class.
            </summary>
            <param name="assemblyCollection">The assembly collection to get the ebmedded resources for</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.DefaultEmbeddedResourceProvider.GetEmbeddedResources">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Infrastructure.ErrorMessages">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ColumnNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The column&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ColumnNamesMustBeUnique">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Column names must be unique. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ColumnTypeMustBeDefined">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The column does not have a type defined. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ConstraintMustHaveAtLeastOneColumn">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The constraint must have at least one column specified. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.DefaultValueCannotBeNull">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The default value cannot be null. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.DestinationSchemaCannotBeNull">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The destination schema&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ExpressionTableNameMissing">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die expression.TableName must not be empty ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ExpressionTableNameMissingWithHints">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Table name not specified, ensure you have appended the OnTable extension. Format should be Delete.ForeignKey(KeyName).OnTable(TableName) ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ForeignKeyMustHaveOneOrMoreForeignColumns">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more foreign columns. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ForeignKeyMustHaveOneOrMorePrimaryColumns">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The foreign key must have one or more primary columns. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ForeignKeyNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The foreign key&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.ForeignTableNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The foreign table name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.IndexMustHaveOneOrMoreColumns">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The index must have one or more columns. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.IndexNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The index&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.MethodXMustBeCalledOnObjectImplementingY">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The {0} method must be called on an object that implements {1}. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.NewColumnNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The new column name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.NewTableNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The new table name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.OldColumnNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The old column name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.OldTableNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The old table name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.OperationCannotBeNull">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The operation to be performed using the database connection cannot be null. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.PrimaryTableNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The primary table name cannot be null or empty. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.SchemaNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The schema&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.SequenceNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The sequence&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.SqlScriptCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The sql script cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.SqlStatementCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The sql statement cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.TableNameCannotBeNullOrEmpty">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The table&apos;s name cannot be null or an empty string. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.UpdateDataExpressionMustNotSpecifyBothWhereClauseAndAllRows">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Update statement specifies both a .Where() condition and that .AllRows() should be targeted. Specify one or the other, but not both. ähnelt.
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ErrorMessages.UpdateDataExpressionMustSpecifyWhereClauseOrAllRows">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Update statement is missing a condition. Specify one by calling .Where() or target all rows by calling .AllRows(). ähnelt.
            </summary>
        </member>
        <member name="T:FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions">
            <summary>
            Extension methods for the <see cref="T:FluentMigrator.Infrastructure.ISupportAdditionalFeatures"/> interface
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.GetAdditionalFeature``1(FluentMigrator.Infrastructure.ISupportAdditionalFeatures,System.String,``0)">
            <summary>
            Gets an additional feature value
            </summary>
            <typeparam name="T">The value type</typeparam>
            <param name="additionalFeatures">The additional feature values</param>
            <param name="key">The key into the <see cref="P:FluentMigrator.Infrastructure.ISupportAdditionalFeatures.AdditionalFeatures"/> dictionary</param>
            <param name="defaultValue">The default value to be used if none was found</param>
            <returns>The stored value or the <paramref name="defaultValue"/></returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.GetAdditionalFeature``1(FluentMigrator.Infrastructure.ISupportAdditionalFeatures,System.String,System.Func{``0})">
            <summary>
            Gets an additional feature value
            </summary>
            <typeparam name="T">The value type</typeparam>
            <param name="additionalFeatures">The additional feature values</param>
            <param name="key">The key into the <see cref="P:FluentMigrator.Infrastructure.ISupportAdditionalFeatures.AdditionalFeatures"/> dictionary</param>
            <param name="createDefaultValue">A lambda to create a default value</param>
            <returns>The stored or a newly created value</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.AdditionalFeaturesExtensions.SetAdditionalFeature``1(FluentMigrator.Infrastructure.ISupportAdditionalFeatures,System.String,``0)">
            <summary>
            Sets the value for an additional feature
            </summary>
            <typeparam name="T">The value type</typeparam>
            <param name="additionalFeatures">The additional feature values</param>
            <param name="key">The key into the <see cref="P:FluentMigrator.Infrastructure.ISupportAdditionalFeatures.AdditionalFeatures"/> dictionary</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="T:FluentMigrator.Infrastructure.Extensions.CloneExtensions">
            <summary>
            Extension methods for cloning
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.CloneExtensions.CloneAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Clones all <paramref name="items"/>
            </summary>
            <typeparam name="T">The item type</typeparam>
            <param name="items">The items to clone</param>
            <returns>The cloned items</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.CloneExtensions.Clone(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Clones all key/value pairs
            </summary>
            <param name="dict">The key value pairs to clone</param>
            <returns>The cloned key/value pairs</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.Extensions.CloneExtensions.CloneTo(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Clones the values of <paramref name="dict"/> and stores them into <paramref name="target"/>
            </summary>
            <param name="dict">The key/value pairs to clone</param>
            <param name="target">The target dictionary to store the cloned key/value pairs</param>
        </member>
        <member name="T:FluentMigrator.Infrastructure.IAssemblyCollection">
            <summary>
            A bundle of one or more Assembly instances
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IAssemblyCollection.Assemblies">
            <summary>
            Gets the Assemblies contained in this collection
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IAssemblyCollection.GetExportedTypes">
            <summary>
            The result of this method is equivalent to calling GetExportedTypes
            on each Assembly in Assemblies.
            </summary>
            <returns>The array of exported types</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IAssemblyCollection.GetManifestResourceNames">
            <summary>
            Gets a array of resources defined in each of the assemblies that are
            contained in this collection, plus which assembly it is defined in.
            </summary>
            <returns>An array of value pairs of resource name plus assembly.</returns>
        </member>
        <member name="T:FluentMigrator.Infrastructure.ICanBeValidated">
            <summary>
            Interface definition for validation
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.ICanBeValidated.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Collect validation errors
            </summary>
            <param name="errors">The collection of error messages</param>
        </member>
        <member name="T:FluentMigrator.Infrastructure.IEmbeddedResourceProvider">
            <summary>
            Interface for getting all embedded resources
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IEmbeddedResourceProvider.GetEmbeddedResources">
            <summary>
            Gets all embedded resources
            </summary>
            <returns>A tuple for every embedded resource and the containing assembly</returns>
        </member>
        <member name="T:FluentMigrator.Infrastructure.IFluentSyntax">
            <summary>
            The base interface for the fluent API
            </summary>
            <remarks>
            This is just here to suppress the default members of <see cref="T:System.Object"/>
            </remarks>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IFluentSyntax.GetType">
            <summary>
            Gets the objects type
            </summary>
            <returns>The objects type</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IFluentSyntax.GetHashCode">
            <summary>
            Gets the objects hash code
            </summary>
            <returns>The objects hash code</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IFluentSyntax.ToString">
            <summary>
            Gets the objects string representation
            </summary>
            <returns>The objects string representation</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IFluentSyntax.Equals(System.Object)">
            <summary>
            Compares if two objects of the same type are equal
            </summary>
            <param name="other">The object this one should be compared to</param>
            <returns><c>true</c> when both objects are equal</returns>
        </member>
        <member name="T:FluentMigrator.Infrastructure.IMigrationContext">
            <summary>
            The context of a migration while collecting up/down expressions
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.ServiceProvider">
            <summary>
            Gets the service provider used to create this migration context
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.Expressions">
            <summary>
            Gets or sets the collection of expressions
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.QuerySchema">
            <summary>
            Gets the <see cref="T:FluentMigrator.IQuerySchema"/> to access the database
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.MigrationAssemblies">
            <summary>
            Gets or sets the collection of migration assemblies
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.ApplicationContext">
            <summary>
            Gets or sets the arbitrary application context passed to the task runner
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationContext.Connection">
            <summary>
            Gets or sets the connection string
            </summary>
        </member>
        <member name="T:FluentMigrator.Infrastructure.IMigrationInfo">
            <summary>
            Interface for migration information
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationInfo.Version">
            <summary>
            Gets the migration version
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationInfo.Description">
            <summary>
            Gets the migration description
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationInfo.TransactionBehavior">
            <summary>
            Gets the desired transaction behavior
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationInfo.Migration">
            <summary>
            Gets the migration
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.IMigrationInfo.IsBreakingChange">
            <summary>
            Gets a value indicating whether the migration is a breaking change
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IMigrationInfo.Trait(System.String)">
            <summary>
            Gets the trait object with the given name
            </summary>
            <param name="name">The trait name</param>
            <returns>The object associated with the given <paramref name="name"/></returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IMigrationInfo.HasTrait(System.String)">
            <summary>
            Returns a value indicating whether a given trait was specified
            </summary>
            <param name="name">The trait name</param>
            <returns><c>true</c> when the trait was specified</returns>
        </member>
        <member name="M:FluentMigrator.Infrastructure.IMigrationInfo.GetName">
            <summary>
            Gets the migration name
            </summary>
            <returns></returns>
        </member>
        <member name="T:FluentMigrator.Infrastructure.ISupportAdditionalFeatures">
            <summary>
            Provides a dictionary to store values for non-standard additional features
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ISupportAdditionalFeatures.AdditionalFeatures">
            <summary>
            Gets the dictionary to store the values for additional features
            </summary>
        </member>
        <member name="T:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly">
            <summary>
            Combines a ManifestResourceName with the assembly it belongs to
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly"/> class.
            </summary>
            <param name="name">The resource name</param>
            <param name="assembly">The assembly this resource name belongs to</param>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.Assembly">
            <summary>
            Gets the assembly the resource <see cref="P:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.Name"/> belongs to
            </summary>
        </member>
        <member name="P:FluentMigrator.Infrastructure.ManifestResourceNameWithAssembly.Name">
            <summary>
            Gets the resource name
            </summary>
        </member>
        <member name="T:FluentMigrator.Infrastructure.MigrationInfo">
            <summary>
            The default <see cref="T:FluentMigrator.Infrastructure.IMigrationInfo"/> implementation for migrations with the <see cref="T:FluentMigrator.MigrationAttribute"/>
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.#ctor(System.Int64,FluentMigrator.TransactionBehavior,FluentMigrator.IMigration)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.MigrationInfo"/> class.
            </summary>
            <param name="version">The migration version</param>
            <param name="transactionBehavior">The desired transaction behavior</param>
            <param name="migration">The underlying migration</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.#ctor(System.Int64,FluentMigrator.TransactionBehavior,System.Boolean,FluentMigrator.IMigration)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.MigrationInfo"/> class.
            </summary>
            <param name="version">The migration version</param>
            <param name="transactionBehavior">The desired transaction behavior</param>
            <param name="isBreakingChange">Indicates wether the migration is a breaking change</param>
            <param name="migration">The underlying migration</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.#ctor(System.Int64,System.String,FluentMigrator.TransactionBehavior,System.Boolean,System.Func{FluentMigrator.IMigration})">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.MigrationInfo"/> class.
            </summary>
            <param name="version">The migration version</param>
            <param name="description">The migration description</param>
            <param name="transactionBehavior">The desired transaction behavior</param>
            <param name="isBreakingChange">Indicates wether the migration is a breaking change</param>
            <param name="migrationFunc">A function to get the <see cref="T:FluentMigrator.IMigration"/> instance</param>
        </member>
        <member name="P:FluentMigrator.Infrastructure.MigrationInfo.Version">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.MigrationInfo.Description">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.MigrationInfo.TransactionBehavior">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.MigrationInfo.Migration">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.MigrationInfo.IsBreakingChange">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.Trait(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.HasTrait(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.GetName">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.AddTrait(System.String,System.Object)">
            <summary>
            Manually adds a trait to the migration
            </summary>
            <param name="name">The trait name</param>
            <param name="value">The trait value</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.MigrationInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Infrastructure.SingleAssembly">
            <summary>
            A simple wrapper which is equivalent to a collection with a single Assembly
            </summary>
        </member>
        <member name="M:FluentMigrator.Infrastructure.SingleAssembly.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Infrastructure.SingleAssembly"/> class.
            </summary>
            <param name="assembly">The assembly</param>
        </member>
        <member name="M:FluentMigrator.Infrastructure.SingleAssembly.GetExportedTypes">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Infrastructure.SingleAssembly.Assemblies">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Infrastructure.SingleAssembly.GetManifestResourceNames">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.IQuerySchema">
            <summary>
            Gets the interface to query a database
            </summary>
        </member>
        <member name="P:FluentMigrator.IQuerySchema.DatabaseType">
            <summary>
            Gets the database type
            </summary>
        </member>
        <member name="P:FluentMigrator.IQuerySchema.DatabaseTypeAliases">
            <summary>
            Gets the database type aliases
            </summary>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.SchemaExists(System.String)">
            <summary>
            Tests if the schema exists
            </summary>
            <param name="schemaName">The schema name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.TableExists(System.String,System.String)">
            <summary>
            Tests if the table exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="tableName">The table name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.ColumnExists(System.String,System.String,System.String)">
            <summary>
            Tests if a column exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.ConstraintExists(System.String,System.String,System.String)">
            <summary>
            Tests if a constraint exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="tableName">The table name</param>
            <param name="constraintName">The constraint name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.IndexExists(System.String,System.String,System.String)">
            <summary>
            Tests if an index exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="tableName">The table name</param>
            <param name="indexName">The index name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.SequenceExists(System.String,System.String)">
            <summary>
            Tests if a sequence exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="sequenceName">The sequence name</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="M:FluentMigrator.IQuerySchema.DefaultValueExists(System.String,System.String,System.String,System.Object)">
            <summary>
            Tests if a default value for a column exists
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <param name="defaultValue">The default value</param>
            <returns><c>true</c> when it exists</returns>
        </member>
        <member name="T:FluentMigrator.LegacyValidationExtensions">
            <summary>
            Extension methods for the obsolete <see cref="T:FluentMigrator.Infrastructure.ICanBeValidated"/>
            </summary>
        </member>
        <member name="M:FluentMigrator.LegacyValidationExtensions.CollectErrors(FluentMigrator.Infrastructure.ICanBeValidated,System.Collections.Generic.ICollection{System.String},System.IServiceProvider)">
            <summary>
            Collects all error messages
            </summary>
            <param name="value">The value to collect the errors for</param>
            <param name="errors">The collected errors</param>
            <param name="serviceProvider">The service provider used to resolve services</param>
        </member>
        <member name="M:FluentMigrator.LegacyValidationExtensions.TryCollectResults(FluentMigrator.Infrastructure.ICanBeValidated,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            Tries to collect errors using the data annotation validation
            </summary>
            <param name="rootValue">The value to collect the errors for</param>
            <param name="results">The validation results</param>
            <param name="serviceProvider">The service provider used to resolve services</param>
            <param name="items">Key/value pairs passed to the validation functions</param>
            <returns><c>true</c> when no errors were found</returns>
        </member>
        <member name="T:FluentMigrator.MaintenanceAttribute">
            <summary>
            Annotates migrations that should always be executed at a specified stage.
            </summary>
            <remarks>
            Migration annotated with <see cref="T:FluentMigrator.MaintenanceAttribute" /> will be always executed
            when migrating the database to the latest version. The execution stage in which it would
            be executed is defined by <see cref="P:FluentMigrator.MaintenanceAttribute.Stage" />. The transaction behavior can also be defined
            with the <see cref="P:FluentMigrator.MaintenanceAttribute.TransactionBehavior"/>, which if not specified defaults to the default
            transaction behavior.
            </remarks>
        </member>
        <member name="M:FluentMigrator.MaintenanceAttribute.#ctor(FluentMigrator.MigrationStage)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MaintenanceAttribute"/> class
            </summary>
            <param name="stage">The migration stage when the migration should be applied</param>
        </member>
        <member name="M:FluentMigrator.MaintenanceAttribute.#ctor(FluentMigrator.MigrationStage,FluentMigrator.TransactionBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MaintenanceAttribute"/> class.
            </summary>
            <param name="stage">The migration stage when the migration should be applied</param>
            <param name="transactionBehavior">The desired transaction behavior</param>
        </member>
        <member name="P:FluentMigrator.MaintenanceAttribute.Stage">
            <summary>
            Gets the migration stage when the migration should be applied
            </summary>
        </member>
        <member name="P:FluentMigrator.MaintenanceAttribute.TransactionBehavior">
            <summary>
            Gets the desired transaction behavior
            </summary>
        </member>
        <member name="T:FluentMigrator.MigrationAttribute">
            <summary>
            Attribute for a migration
            </summary>
        </member>
        <member name="M:FluentMigrator.MigrationAttribute.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MigrationAttribute"/> class.
            </summary>
            <param name="version">The migration version</param>
            <param name="description">The migration description</param>
        </member>
        <member name="M:FluentMigrator.MigrationAttribute.#ctor(System.Int64,FluentMigrator.TransactionBehavior,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MigrationAttribute"/> class.
            </summary>
            <param name="version">The migration version</param>
            <param name="transactionBehavior">The desired transaction behavior</param>
            <param name="description">The migration description</param>
        </member>
        <member name="P:FluentMigrator.MigrationAttribute.Version">
            <summary>
            Gets the migration version
            </summary>
        </member>
        <member name="P:FluentMigrator.MigrationAttribute.TransactionBehavior">
            <summary>
            Gets the desired transaction behavior
            </summary>
        </member>
        <member name="P:FluentMigrator.MigrationAttribute.Description">
            <summary>
            Gets the description
            </summary>
        </member>
        <member name="P:FluentMigrator.MigrationAttribute.BreakingChange">
            <summary>
            Gets or sets a value indicating whether the transaction is a breaking change
            </summary>
        </member>
        <member name="T:FluentMigrator.MigrationDirection">
            <summary>
            The direction of the migration
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationDirection.Up">
            <summary>
            Applies the migration
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationDirection.Down">
            <summary>
            Reverts the migration
            </summary>
        </member>
        <member name="T:FluentMigrator.MigrationStage">
            <summary>
            Represents a stage in the migration run.
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationStage.BeforeAll">
            <summary>
            Migration will be run before all standard migrations.
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationStage.BeforeEach">
            <summary>
            Migration will be run before each standard migration.
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationStage.AfterEach">
            <summary>
            Migration will be run after each standard migration.
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationStage.BeforeProfiles">
            <summary>
            Migration will be run after all standard migrations, but before profiles.
            </summary>
        </member>
        <member name="F:FluentMigrator.MigrationStage.AfterAll">
            <summary>
            Migration will be run after all standard migrations and profiles.
            </summary>
        </member>
        <member name="T:FluentMigrator.MigrationTraitAttribute">
            <summary>
            A trait for a migration
            </summary>
        </member>
        <member name="M:FluentMigrator.MigrationTraitAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MigrationTraitAttribute"/> class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:FluentMigrator.MigrationTraitAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.MigrationTraitAttribute"/> class.
            </summary>
            <param name="name">The trait name</param>
            <param name="value">The trait value</param>
        </member>
        <member name="P:FluentMigrator.MigrationTraitAttribute.Name">
            <summary>
            Gets the trait name
            </summary>
        </member>
        <member name="P:FluentMigrator.MigrationTraitAttribute.Value">
            <summary>
            Gets the trait value
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.ColumnDefinition">
            <summary>
            The column definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.Name">
            <summary>
            Gets or sets the column definition name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.Type">
            <summary>
            Gets or sets the column type
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.Size">
            <summary>
            Gets or sets the column type size (read: precision or length)
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.Precision">
            <summary>
            Gets or sets the column type precision (read: scale)
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.CustomType">
            <summary>
            Gets or sets a database specific custom column type
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.DefaultValue">
            <summary>
            Gets or sets the columns default value
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsForeignKey">
            <summary>
            Gets or sets a value indicating whether this column is a foreign key
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsIdentity">
            <summary>
            Gets or sets a value indicating whether this column gets its value using an identity definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsIndexed">
            <summary>
            Gets or sets a value indicating that this column is indexed
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsPrimaryKey">
            <summary>
            Gets or sets a value indicating whether this column is a primary key
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.PrimaryKeyName">
            <summary>
            Gets or sets the primary key constraint name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsNullable">
            <summary>
            Gets or sets a value indicating whether this column is nullable
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.IsUnique">
            <summary>
            Gets or sets a value indicating whether this column must be unique
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.TableName">
            <summary>
            Gets or sets the columns table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.ModificationType">
            <summary>
            Gets or sets if the column definition results in a CREATE or an ALTER SQL statement
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.ColumnDescription">
            <summary>
            Gets or sets the column description
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.CollationName">
            <summary>
            Gets or sets the collation name if the column has a string or ansi string type
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.ForeignKey">
            <summary>
            Gets or sets the foreign key definition
            </summary>
            <remarks>
            A column might be marked as <see cref="P:FluentMigrator.Model.ColumnDefinition.IsForeignKey"/>, but
            <see cref="P:FluentMigrator.Model.ColumnDefinition.ForeignKey"/> might still be <c>null</c>. This
            happens when <c>ForeignKey()</c> without arguments gets
            called on a column.
            </remarks>
        </member>
        <member name="M:FluentMigrator.Model.ColumnDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ColumnDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.ColumnDefinition.UndefinedDefaultValue">
            <summary>
            Instances of this class are used to specify an undefined default value
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ColumnDefinition.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ColumnDefinition.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.ColumnModificationType">
            <summary>
            Indicates wheter a column should be created or altered
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.ColumnModificationType.Create">
            <summary>
            The column in question should be created
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.ColumnModificationType.Alter">
            <summary>
            The column in question should be altered
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.ConstraintDefinition">
            <summary>
            The constraint definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.IsPrimaryKeyConstraint">
            <summary>
            Gets a value indicating whether the constraint is a primary key constraint
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.IsUniqueConstraint">
            <summary>
            Gets a value indicating whether the constraint is a unique constraint
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.SchemaName">
            <summary>
            Gets or sets the schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.ConstraintName">
            <summary>
            Gets or sets the constraint name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.Columns">
            <summary>
            Gets or sets the column names
            </summary>
        </member>
        <member name="M:FluentMigrator.Model.ConstraintDefinition.#ctor(FluentMigrator.Model.ConstraintType)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Model.ConstraintDefinition"/> class.
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ConstraintDefinition.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ConstraintDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ConstraintDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ConstraintDefinition.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.ConstraintType">
            <summary>
            The constraint type
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.ConstraintType.PrimaryKey">
            <summary>
            A primary key constraint
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.ConstraintType.Unique">
            <summary>
            A unique constraint
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.DeletionDataDefinition">
            <summary>
            A list of column name/value pairs used for DELETE conditions
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.Direction">
            <summary>
            The direction for an index column
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.Direction.Ascending">
            <summary>
            The order direction of the index column should be <c>Ascending</c>
            </summary>
        </member>
        <member name="F:FluentMigrator.Model.Direction.Descending">
            <summary>
            The order direction of the index column should be <c>Descending</c>
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.ForeignKeyDefinition">
            <summary>
            The foreign key definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.Name">
            <summary>
            Gets or sets a foreign key name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.ForeignTable">
            <summary>
            Gets or sets the foreign key table
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.ForeignTableSchema">
            <summary>
            Gets or sets the foreign keys table schema
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.PrimaryTable">
            <summary>
            Gets or sets the primary table
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.PrimaryTableSchema">
            <summary>
            Gets or sets the primary table schema
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.OnDelete">
            <summary>
            Gets or sets the rule for a cascading DELETE
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.OnUpdate">
            <summary>
            Gets or sets the rule for a cascading UPDATE
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.ForeignColumns">
            <summary>
            GEts or sets the foreign key column names
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.ForeignKeyDefinition.PrimaryColumns">
            <summary>
            Gets or sets the primary key column names
            </summary>
        </member>
        <member name="M:FluentMigrator.Model.ForeignKeyDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ForeignKeyDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.ForeignKeyDefinition.HasForeignAndPrimaryColumnsDefined">
            <summary>
            Gets a value indicating whether primary and foreign key columns are defined
            </summary>
            <returns></returns>
        </member>
        <member name="M:FluentMigrator.Model.ForeignKeyDefinition.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.IndexColumnDefinition">
            <summary>
            Index column definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexColumnDefinition.Name">
            <summary>
            Gets or sets the column name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexColumnDefinition.Direction">
            <summary>
            Gets or sets the sort direction of the index column
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexColumnDefinition.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.IndexColumnDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.IndexColumnDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.IndexDefinition">
            <summary>
            The index definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.Name">
            <summary>
            Gets or sets the index name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.SchemaName">
            <summary>
            Gets or sets the schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.TableName">
            <summary>
            Gets or sets the table name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.IsUnique">
            <summary>
            Gets or sets a value indicating whteher the index only allows unique values
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.IsClustered">
            <summary>
            Gets or sets a value indicating whether the index is clustered
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.Columns">
            <summary>
            Gets or sets a collection of index column definitions
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.AdditionalFeatures">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.IndexDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.IndexDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.IndexDefinition.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="P:FluentMigrator.Model.IndexDefinition.FluentMigrator#Validation#IValidationChildren#Children">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Model.InsertionDataDefinition">
            <summary>
            A list of column name/value pairs used for INSERT data
            </summary>
        </member>
        <member name="T:FluentMigrator.Model.SequenceDefinition">
            <summary>
            The sequence definition
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.Name">
            <summary>
            Gets or sets the sequence name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.SchemaName">
            <summary>
            Gets or sets the schema name
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.Increment">
            <summary>
            Gets or sets the increment of the sequence
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.MinValue">
            <summary>
            Gets or sets the minimum value of the sequence (inclusive)
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.MaxValue">
            <summary>
            Gets or sets the maximum value of the sequence (inclusive)
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.StartWith">
            <summary>
            Gets or sets the start value of the sequence
            </summary>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.Cache">
            <summary>
            Gets or sets the number of cached sequence values
            </summary>
            <remarks>
            Normally used together with <see cref="P:FluentMigrator.Model.SequenceDefinition.Increment"/>.
            </remarks>
        </member>
        <member name="P:FluentMigrator.Model.SequenceDefinition.Cycle">
            <summary>
            Gets or sets a value indicating whether the sequence should start with <see cref="P:FluentMigrator.Model.SequenceDefinition.MinValue"/> for the next value after <see cref="P:FluentMigrator.Model.SequenceDefinition.MaxValue"/>
            </summary>
        </member>
        <member name="M:FluentMigrator.Model.SequenceDefinition.Clone">
            <inheritdoc />
        </member>
        <member name="M:FluentMigrator.Model.SequenceDefinition.CollectValidationErrors(System.Collections.Generic.ICollection{System.String})">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.NonUnicodeString">
            <summary>
            An explicitly non-Unicode string literal ('some string' in T-SQL)
            </summary>
        </member>
        <member name="P:FluentMigrator.NonUnicodeString.Value">
            <summary>
            Gets the value of the non-Unicode string literal
            </summary>
        </member>
        <member name="M:FluentMigrator.NonUnicodeString.#ctor(System.String)">
            <summary>
            Used for explicitly creating a non-Unicode string literal in Transact SQL
            </summary>
            <param name="value">The value of the non-Unicode string literal</param>
        </member>
        <member name="M:FluentMigrator.NonUnicodeString.ToString">
            <summary>
            Overrides ToString() to return the value.
            </summary>
            <returns>
            The value of the non-Unicode string literal.
            </returns>
        </member>
        <member name="T:FluentMigrator.ProfileAttribute">
            <summary>
            Defines a profile for a migration
            </summary>
        </member>
        <member name="M:FluentMigrator.ProfileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.ProfileAttribute"/> class.
            </summary>
            <param name="profileName">The profile name</param>
        </member>
        <member name="P:FluentMigrator.ProfileAttribute.ProfileName">
            <summary>
            Gets the profile name
            </summary>
        </member>
        <member name="T:FluentMigrator.RawSql">
            <summary>
            A wrapper class for a SQL value
            </summary>
            <remarks>
            This raw SQL value is normally used when a custom default value was specified
            </remarks>
        </member>
        <member name="M:FluentMigrator.RawSql.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.RawSql"/> class.
            </summary>
            <param name="underlyingSql">The underlying SQL value</param>
        </member>
        <member name="P:FluentMigrator.RawSql.Value">
            <summary>
            Gets the underlying SQL value
            </summary>
        </member>
        <member name="M:FluentMigrator.RawSql.Insert(System.String)">
            <summary>
            Creates a new <see cref="T:FluentMigrator.RawSql"/> instance using a given SQL value
            </summary>
            <param name="sqlToRun">The SQL value</param>
            <returns>The new <see cref="T:FluentMigrator.RawSql"/> instance</returns>
        </member>
        <member name="T:FluentMigrator.SqlScriptTokenReplacer">
            <summary>
            Function to replace token in an SQL script
            </summary>
        </member>
        <member name="M:FluentMigrator.SqlScriptTokenReplacer.ReplaceSqlScriptTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replace tokens in an SQL script
            </summary>
            <param name="sqlText">The SQL script where the tokens will be replaced</param>
            <param name="parameters">The tokens to be replaced</param>
            <returns>The SQL script with the replaced tokens</returns>
        </member>
        <member name="T:FluentMigrator.SystemMethods">
            <summary>
            The well-known system methods
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.NewGuid">
            <summary>
            The function to create a new GUID
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.NewSequentialId">
            <summary>
            The function to create a new sequential GUID
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.CurrentDateTime">
            <summary>
            The function to get the current timestamp
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.CurrentDateTimeOffset">
            <summary>
            The function to get the current timestamp with time zone
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.CurrentUTCDateTime">
            <summary>
            The function to get the current UTC timestamp
            </summary>
        </member>
        <member name="F:FluentMigrator.SystemMethods.CurrentUser">
            <summary>
            The function to get the current user
            </summary>
        </member>
        <member name="T:FluentMigrator.TagBehavior">
            <summary>
            The desired tag matching behavior
            </summary>
        </member>
        <member name="F:FluentMigrator.TagBehavior.RequireAll">
            <summary>
            All tags must be matched
            </summary>
        </member>
        <member name="F:FluentMigrator.TagBehavior.RequireAny">
            <summary>
            Any tag must be matched
            </summary>
        </member>
        <member name="T:FluentMigrator.TagsAttribute">
            <summary>
             Used to filter which migrations are run.
            </summary>
        </member>
        <member name="P:FluentMigrator.TagsAttribute.Behavior">
            <summary>
            Gets the behavior of the runner when evaluating <see cref="P:FluentMigrator.TagsAttribute.TagNames" />.
            </summary>
        </member>
        <member name="P:FluentMigrator.TagsAttribute.TagNames">
            <summary>
            Gets the names of the tags that are evaluated by the runner.
            </summary>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(FluentMigrator.TagBehavior,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="behavior">The behavior of the runner when evaluating <paramref name="tagNames"/>.</param>
            <param name="tagNames">The names of the tags that are evaluated by the runner.</param>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="tagNames">The names of the tags that are evaluated by the runner.</param>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="tagName1">The tag that is evaluated by the runner.</param>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="tagName1">The first tag that is evaluated by the runner.</param>
            <param name="tagName2">The second tag that is evaluated by the runner.</param>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="tagName1">The first tag that is evaluated by the runner.</param>
            <param name="tagName2">The second tag that is evaluated by the runner.</param>
            <param name="tagName3">The third tag that is evaluated by the runner.</param>
        </member>
        <member name="M:FluentMigrator.TagsAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TagsAttribute" /> class.
            </summary>
            <param name="tagName1">The first tag that is evaluated by the runner.</param>
            <param name="tagName2">The second tag that is evaluated by the runner.</param>
            <param name="tagName3">The third tag that is evaluated by the runner.</param>
            <param name="tagName4">The fourth tag that is evaluated by the runner.</param>
        </member>
        <member name="T:FluentMigrator.TimestampedMigrationAttribute">
            <summary>
            Creates a MigrationAttribute which executes in order based on the given date and time.
            </summary>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="second">The second the migration was created.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="description">A description for the migration.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="second">The second the migration was created.</param>
            <param name="description">A description for the migration.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,FluentMigrator.TransactionBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="transactionBehavior">The <see cref="T:FluentMigrator.TransactionBehavior"/> the migration will use.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,FluentMigrator.TransactionBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="second">The second the migration was created.</param>
            <param name="transactionBehavior">The <see cref="T:FluentMigrator.TransactionBehavior"/> the migration will use.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,FluentMigrator.TransactionBehavior,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="transactionBehavior">The <see cref="T:FluentMigrator.TransactionBehavior"/> the migration will use.</param>
            <param name="description">A description for the migration.</param>
        </member>
        <member name="M:FluentMigrator.TimestampedMigrationAttribute.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,FluentMigrator.TransactionBehavior,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.TimestampedMigrationAttribute"/> class whose version is based on date and time information.
            </summary>
            <param name="year">The year the migration was created.</param>
            <param name="month">The month the migration was created.</param>
            <param name="day">The day the migration was created.</param>
            <param name="hour">The hour the migration was created.</param>
            <param name="minute">The minute the migration was created.</param>
            <param name="second">The second the migration was created.</param>
            <param name="transactionBehavior">The <see cref="T:FluentMigrator.TransactionBehavior"/> the migration will use.</param>
            <param name="description">A description for the migration.</param>
        </member>
        <member name="T:FluentMigrator.TransactionBehavior">
            <summary>
            The desired transaction behavior
            </summary>
        </member>
        <member name="F:FluentMigrator.TransactionBehavior.Default">
            <summary>
            The default transaction behavior, meaning 1 transaction per migration if the Processor allows it.
            </summary>
        </member>
        <member name="F:FluentMigrator.TransactionBehavior.None">
            <summary>
            A migration will not use a transaction.
            </summary>
        </member>
        <member name="T:FluentMigrator.ValidationUtilities">
            <summary>
            Helper functions to validate objects
            </summary>
        </member>
        <member name="M:FluentMigrator.ValidationUtilities.TryCollectResults(System.ComponentModel.DataAnnotations.ValidationContext,System.Object,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Collect validation results
            </summary>
            <param name="context">The validation context</param>
            <param name="value">The value to be validated</param>
            <param name="results">The collected validation results</param>
            <returns><c>true</c> when no errors were found</returns>
        </member>
        <member name="T:FluentMigrator.Validation.DefaultMigrationExpressionValidator">
            <summary>
            Default implementation of a <see cref="T:FluentMigrator.Validation.IMigrationExpressionValidator"/>
            </summary>
        </member>
        <member name="M:FluentMigrator.Validation.DefaultMigrationExpressionValidator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:FluentMigrator.Validation.DefaultMigrationExpressionValidator"/> class.
            </summary>
            <param name="serviceProvider">The service provider</param>
        </member>
        <member name="M:FluentMigrator.Validation.DefaultMigrationExpressionValidator.Validate(FluentMigrator.Expressions.IMigrationExpression)">
            <inheritdoc />
        </member>
        <member name="T:FluentMigrator.Validation.IMigrationExpressionValidator">
            <summary>
            Interface for a migration expression validator
            </summary>
        </member>
        <member name="M:FluentMigrator.Validation.IMigrationExpressionValidator.Validate(FluentMigrator.Expressions.IMigrationExpression)">
            <summary>
            Validates the given migration expression
            </summary>
            <param name="expression">The migration expression to validate</param>
            <returns>The validation results</returns>
        </member>
        <member name="T:FluentMigrator.Validation.IValidationChildren">
            <summary>
            Provides access to child objects that have to be validated too
            </summary>
        </member>
        <member name="P:FluentMigrator.Validation.IValidationChildren.Children">
            <summary>
            Gets the child objects
            </summary>
        </member>
    </members>
</doc>
